//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace redchapinapayout.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class cooitzacoreEntities : DbContext
    {
        public cooitzacoreEntities()
            : base("name=cooitzacoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CatOpcionesAsamblea> CatOpcionesAsambleas { get; set; }
        public virtual DbSet<TblAsistenciasAsambalea> TblAsistenciasAsambaleas { get; set; }
        public virtual DbSet<TblSmsCore> TblSmsCores { get; set; }
        public virtual DbSet<CatBusqueda> CatBusquedas { get; set; }
        public virtual DbSet<CatPermiso> CatPermisos { get; set; }
        public virtual DbSet<CatPersona> CatPersonas { get; set; }
        public virtual DbSet<Tbl_U_Roles> Tbl_U_Roles { get; set; }
        public virtual DbSet<TblBitacoraBusquedaUsuario> TblBitacoraBusquedaUsuarios { get; set; }
        public virtual DbSet<TblModulo> TblModulos { get; set; }
        public virtual DbSet<TblPermisosUsuario> TblPermisosUsuarios { get; set; }
        public virtual DbSet<TblPersona> TblPersonas { get; set; }
        public virtual DbSet<TblRole> TblRoles { get; set; }
        public virtual DbSet<TblSesion> TblSesions { get; set; }
        public virtual DbSet<TblSubModulo> TblSubModulos { get; set; }
        public virtual DbSet<TblUsuario> TblUsuarios { get; set; }
        public virtual DbSet<TblUsuarios_Coordinador> TblUsuarios_Coordinador { get; set; }
        public virtual DbSet<CatEstadosPublicado> CatEstadosPublicados { get; set; }
        public virtual DbSet<CatImagenesIntranet> CatImagenesIntranets { get; set; }
        public virtual DbSet<CatJerarquia> CatJerarquias { get; set; }
        public virtual DbSet<CatOrigen> CatOrigens { get; set; }
        public virtual DbSet<CatTipoArchivo> CatTipoArchivoes { get; set; }
        public virtual DbSet<TblBiblioteca> TblBibliotecas { get; set; }
        public virtual DbSet<TblLogBiblioteca> TblLogBibliotecas { get; set; }
        public virtual DbSet<catestadoscallcenter> catestadoscallcenters { get; set; }
        public virtual DbSet<tblbitacorapremora> tblbitacorapremoras { get; set; }
        public virtual DbSet<tblpremora> tblpremoras { get; set; }
        public virtual DbSet<TblCarteraCredito> TblCarteraCreditoes { get; set; }
        public virtual DbSet<TblResuman> TblResumen { get; set; }
        public virtual DbSet<TblResumenSaldo> TblResumenSaldoes { get; set; }
        public virtual DbSet<CatOpcionesChn> CatOpcionesChns { get; set; }
        public virtual DbSet<TblDeclaracionConcentimientolg> TblDeclaracionConcentimientolgs { get; set; }
        public virtual DbSet<TblDeclaracionSalud> TblDeclaracionSaluds { get; set; }
        public virtual DbSet<TblDeclaracionSaludchnlg> TblDeclaracionSaludchnlgs { get; set; }
        public virtual DbSet<TblDeclaracionSaludlg> TblDeclaracionSaludlgs { get; set; }
        public virtual DbSet<TblCoasiste> TblCoasistes { get; set; }
        public virtual DbSet<CatDestinatariosCorreo> CatDestinatariosCorreos { get; set; }
        public virtual DbSet<CatSistemasCorreo> CatSistemasCorreos { get; set; }
        public virtual DbSet<TblSistemasCorreosDestinatariosCorreo> TblSistemasCorreosDestinatariosCorreos { get; set; }
        public virtual DbSet<CAJAENTERA2022> CAJAENTERA2022 { get; set; }
        public virtual DbSet<CatAnio> CatAnios { get; set; }
        public virtual DbSet<CatMes> CatMeses { get; set; }
        public virtual DbSet<CatNombre> CatNombres { get; set; }
        public virtual DbSet<CatParentesco> CatParentescos { get; set; }
        public virtual DbSet<CatParentescosGastosM> CatParentescosGastosMs { get; set; }
        public virtual DbSet<CatProveedoresPago> CatProveedoresPagos { get; set; }
        public virtual DbSet<CatTiposDocumento> CatTiposDocumentos { get; set; }
        public virtual DbSet<CatTiposKilometraje> CatTiposKilometrajes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblAdminpantalla> tblAdminpantallas { get; set; }
        public virtual DbSet<TblBitacoraService> TblBitacoraServices { get; set; }
        public virtual DbSet<TblConvivioImagene> TblConvivioImagenes { get; set; }
        public virtual DbSet<TblDirectorio> TblDirectorios { get; set; }
        public virtual DbSet<TblDirectoriosAgencia> TblDirectoriosAgencias { get; set; }
        public virtual DbSet<TblHistoriale> TblHistoriales { get; set; }
        public virtual DbSet<TblImagenesConvivio> TblImagenesConvivios { get; set; }
        public virtual DbSet<TblLogCatalogosRch> TblLogCatalogosRches { get; set; }
        public virtual DbSet<TblPermisosUsuarios1> TblPermisosUsuarios1 { get; set; }
        public virtual DbSet<CatClasificacionFactura> CatClasificacionFacturas { get; set; }
        public virtual DbSet<CatColaboradore> CatColaboradores { get; set; }
        public virtual DbSet<CatDepartamentosRepublica> CatDepartamentosRepublicas { get; set; }
        public virtual DbSet<CatDepartamentosTrabajo> CatDepartamentosTrabajoes { get; set; }
        public virtual DbSet<CatEstadoCivil> CatEstadoCivils { get; set; }
        public virtual DbSet<CatEstado> CatEstados { get; set; }
        public virtual DbSet<CatEstadosTiempo> CatEstadosTiempoes { get; set; }
        public virtual DbSet<CatIcono> CatIconos { get; set; }
        public virtual DbSet<CatLugare> CatLugares { get; set; }
        public virtual DbSet<CatOpcione> CatOpciones { get; set; }
        public virtual DbSet<CatPuesto> CatPuestos { get; set; }
        public virtual DbSet<CatPunto> CatPuntos { get; set; }
        public virtual DbSet<CatRegione> CatRegiones { get; set; }
        public virtual DbSet<CatSerieFactura> CatSerieFacturas { get; set; }
        public virtual DbSet<CatSexo> CatSexoes { get; set; }
        public virtual DbSet<CatTiposCredito> CatTiposCreditos { get; set; }
        public virtual DbSet<CatTiposKilometraje1> CatTiposKilometraje1 { get; set; }
        public virtual DbSet<CatTipoUbicacione> CatTipoUbicaciones { get; set; }
        public virtual DbSet<CatUbicacione> CatUbicaciones { get; set; }
        public virtual DbSet<MunicipiosRepublica> MunicipiosRepublicas { get; set; }
        public virtual DbSet<TblCaracterisitcasGrabacion> TblCaracterisitcasGrabacions { get; set; }
        public virtual DbSet<TblConvivio> TblConvivios { get; set; }
        public virtual DbSet<TblHistoriales1> TblHistoriales1 { get; set; }
        public virtual DbSet<TblProveedore> TblProveedores { get; set; }
        public virtual DbSet<TblCarteraCredito1> TblCarteraCredito1 { get; set; }
        public virtual DbSet<CatTipoInstitucione> CatTipoInstituciones { get; set; }
        public virtual DbSet<CatTipoTransaccione> CatTipoTransacciones { get; set; }
        public virtual DbSet<TblHistorico> TblHistoricos { get; set; }
        public virtual DbSet<TblPeriodo> TblPeriodos { get; set; }
        public virtual DbSet<CatTipificacionProducto> CatTipificacionProductos { get; set; }
        public virtual DbSet<CatTiposConsulta> CatTiposConsultas { get; set; }
        public virtual DbSet<CatTiposDistribucione> CatTiposDistribuciones { get; set; }
        public virtual DbSet<CatTiposFiltro> CatTiposFiltros { get; set; }
        public virtual DbSet<CatTiposFiltrosEvaluacione> CatTiposFiltrosEvaluaciones { get; set; }
        public virtual DbSet<CatTiposMedicion> CatTiposMedicions { get; set; }
        public virtual DbSet<CatTiposOperacion> CatTiposOperacions { get; set; }
        public virtual DbSet<TblAsignacione> TblAsignaciones { get; set; }
        public virtual DbSet<TblAsignacionesEjecutivosSucursale> TblAsignacionesEjecutivosSucursales { get; set; }
        public virtual DbSet<TblCierresProducto> TblCierresProductos { get; set; }
        public virtual DbSet<TblEmpleadosMeta> TblEmpleadosMetas { get; set; }
        public virtual DbSet<TblGruposAgencia> TblGruposAgencias { get; set; }
        public virtual DbSet<TblProductosCooitza> TblProductosCooitzas { get; set; }
        public virtual DbSet<TblRolesMeta> TblRolesMetas { get; set; }
        public virtual DbSet<TblSucrusalesProductosCooitza> TblSucrusalesProductosCooitzas { get; set; }
        public virtual DbSet<TblMigracion> TblMigracions { get; set; }
        public virtual DbSet<CatDestinatariosCorreo1> CatDestinatariosCorreos1 { get; set; }
        public virtual DbSet<CatDestinatariosSm> CatDestinatariosSms { get; set; }
        public virtual DbSet<CatEstadosTecnico> CatEstadosTecnicos { get; set; }
        public virtual DbSet<CatHorarioServicio> CatHorarioServicios { get; set; }
        public virtual DbSet<CatServiciosMonitor> CatServiciosMonitors { get; set; }
        public virtual DbSet<TblCertificacionesTecnico> TblCertificacionesTecnicos { get; set; }
        public virtual DbSet<TblGirasTecnico> TblGirasTecnicos { get; set; }
        public virtual DbSet<TblHorario> TblHorarios { get; set; }
        public virtual DbSet<TblMonitorGrabacion> TblMonitorGrabacions { get; set; }
        public virtual DbSet<CatEstadosBusquedasRch> CatEstadosBusquedasRches { get; set; }
        public virtual DbSet<CatEstadosLiberacionesRch> CatEstadosLiberacionesRches { get; set; }
        public virtual DbSet<CatEstadosLoginRch> CatEstadosLoginRches { get; set; }
        public virtual DbSet<CatEstadosReservasRch> CatEstadosReservasRches { get; set; }
        public virtual DbSet<CatEstadosTransaccione> CatEstadosTransacciones { get; set; }
        public virtual DbSet<CatRelationshipRemitente> CatRelationshipRemitentes { get; set; }
        public virtual DbSet<CatTiposRemesa> CatTiposRemesas { get; set; }
        public virtual DbSet<TblConfiguracionesRch> TblConfiguracionesRches { get; set; }
        public virtual DbSet<TblLogCatalogosRch1> TblLogCatalogosRch1 { get; set; }
        public virtual DbSet<TblLoginRch> TblLoginRches { get; set; }
        public virtual DbSet<TblTransaccionesRch> TblTransaccionesRches { get; set; }
        public virtual DbSet<CatEstadosRrhh> CatEstadosRrhhs { get; set; }
        public virtual DbSet<constanciasLaborale> constanciasLaborales { get; set; }
        public virtual DbSet<CatTblUsuariosXTblSistema> CatTblUsuariosXTblSistemas { get; set; }
        public virtual DbSet<TblSistema> TblSistemas { get; set; }
        public virtual DbSet<TblUsuarios1> TblUsuarios1 { get; set; }
        public virtual DbSet<CatEstatusTransac> CatEstatusTransacs { get; set; }
        public virtual DbSet<TblPropiedade> TblPropiedades { get; set; }
        public virtual DbSet<TblSiguePagar> TblSiguePagars { get; set; }
        public virtual DbSet<TblSigueTransac> TblSigueTransacs { get; set; }
        public virtual DbSet<CatBanco> CatBancos { get; set; }
        public virtual DbSet<CatCuentasProveedore> CatCuentasProveedores { get; set; }
        public virtual DbSet<CatDescripcionesProveedore> CatDescripcionesProveedores { get; set; }
        public virtual DbSet<CatProveedoresPagos1> CatProveedoresPagos1 { get; set; }
        public virtual DbSet<CatTiposCreditosProveedore> CatTiposCreditosProveedores { get; set; }
        public virtual DbSet<CatTiposCuenta> CatTiposCuentas { get; set; }
        public virtual DbSet<CatEstadoSolicitude> CatEstadoSolicitudes { get; set; }
        public virtual DbSet<CatProveedoresCooitza> CatProveedoresCooitzas { get; set; }
        public virtual DbSet<CatProveedoresExterno> CatProveedoresExternos { get; set; }
        public virtual DbSet<CatTiposEmpresasProveedore> CatTiposEmpresasProveedores { get; set; }
        public virtual DbSet<CatTiposMoneda> CatTiposMonedas { get; set; }
        public virtual DbSet<CatTiposMovimiento> CatTiposMovimientos { get; set; }
        public virtual DbSet<CatTiposProveedore> CatTiposProveedores { get; set; }
        public virtual DbSet<TblSolicitudesCooitza> TblSolicitudesCooitzas { get; set; }
        public virtual DbSet<TblSolicitudesMoviemiento> TblSolicitudesMoviemientos { get; set; }
        public virtual DbSet<TblSolicitudesMovimientosDetalle> TblSolicitudesMovimientosDetalles { get; set; }
        public virtual DbSet<CatPromocione> CatPromociones { get; set; }
        public virtual DbSet<TblEntrega> TblEntregas { get; set; }
        public virtual DbSet<TblAgencia> TblAgencias { get; set; }
        public virtual DbSet<TblTransUnion> TblTransUnions { get; set; }
        public virtual DbSet<TblTransUnionTest> TblTransUnionTests { get; set; }
        public virtual DbSet<TblUniversale> TblUniversales { get; set; }
        public virtual DbSet<TblUniversalesTest> TblUniversalesTests { get; set; }
        public virtual DbSet<CatEstadosViatico> CatEstadosViaticos { get; set; }
        public virtual DbSet<CatOpcionesVehiculo> CatOpcionesVehiculos { get; set; }
        public virtual DbSet<CatRubro> CatRubros { get; set; }
        public virtual DbSet<CatTipoAnticipo> CatTipoAnticipoes { get; set; }
        public virtual DbSet<CatTipoPlaca> CatTipoPlacas { get; set; }
        public virtual DbSet<CatTipoSolicitude> CatTipoSolicitudes { get; set; }
        public virtual DbSet<Tbl_Cc_Rubros> Tbl_Cc_Rubros { get; set; }
        public virtual DbSet<TblDeposito> TblDepositos { get; set; }
        public virtual DbSet<TblDestino> TblDestinos { get; set; }
        public virtual DbSet<TblEstado_Solicitudes> TblEstado_Solicitudes { get; set; }
        public virtual DbSet<TblFactura> TblFacturas { get; set; }
        public virtual DbSet<TblFacturasXcatRubro> TblFacturasXcatRubros { get; set; }
        public virtual DbSet<TblSolicitude> TblSolicitudes { get; set; }
        public virtual DbSet<TblSolicitudesXtblVehiculo> TblSolicitudesXtblVehiculos { get; set; }
        public virtual DbSet<TblVehiculo> TblVehiculos { get; set; }
        public virtual DbSet<CatZuma> CatZumas { get; set; }
        public virtual DbSet<TblAfiliacione> TblAfiliaciones { get; set; }
        public virtual DbSet<Caja2022> Caja2022 { get; set; }
    
        [DbFunction("cooitzacoreEntities", "obSubModulo")]
        public virtual IQueryable<obSubModulo_Result> obSubModulo(Nullable<long> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<obSubModulo_Result>("[cooitzacoreEntities].[obSubModulo](@idUsuario)", idUsuarioParameter);
        }
    
        public virtual ObjectResult<obtenerSubmodulo_Result> obtenerSubmodulo(Nullable<long> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<obtenerSubmodulo_Result>("obtenerSubmodulo", idUsuarioParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
