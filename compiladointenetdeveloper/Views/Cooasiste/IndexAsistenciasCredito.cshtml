@model iveCincoFrame.Models.Cooasiste.CooasisteDtoVm
@{
    ViewBag.Title = "IndexAsistenciasCredito";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.jsdelivr.net/gh/linways/table-to-excel@v1.0.4/dist/tableToExcel.js"></script>
<div class="row">
    <div class="col-12">
        <div>
            <div class="card">
                <div class="card-body">
                    <div class="my-3">
                        <div><h2 class="text-center">Monto Total y Posibles Conciliaciónes Cooasiste/Creditos</h2></div>
                        <div id="transac-directorios" class="col-12">
                            <div class="container">
                                <div>
                                    <h5 class="">-No se permiten dos fechas iguales</h5>
                                    <h5 class="">-El reporte representa lo asignado a otros cobros Cooasiste</h5>
                                </div>
                                <div class="row">
                                    <div class="col-4">
                                        <label class="form-label" for="FechaMinima">Fecha Minima</label>
                                        <div class="input-group">

                                            @Html.EditorFor(model => model.FechaMinima, new { htmlAttributes = new { @class = "form-control", type = "date", value = "dd/mm/yyyy" } })
                                            @Html.ValidationMessageFor(model => model.FechaMinima, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-5">
                                        <label class="form-label" for="FechaMaxima">Fecha Maxima</label>
                                        <div class="input-group">
                                            @Html.EditorFor(model => model.FechaMaxima, new { htmlAttributes = new { @class = "form-control", type = "date", value = "dd/mm/yyyy" } })
                                            @Html.ValidationMessageFor(model => model.FechaMaxima, "", new { @class = "text-danger" })
                                            <button type="button" class="btn btn-primary" id="consultar" style="background: #153d77;"><i class="align-middle me-2 fas fa-fw fa-search"></i> Consultar</button>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <duv class="container mt-4 mb-4">
                                        <label for="progress" class="form-label">Progreso de carga</label>
                                        <div class="progress">
                                            <div class="progress-bar progress-bar-striped progress-bar-animated" id="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
                                        </div>
                                    </duv>
                                </div>
                            </div>
                            <div class="container" id="contenido-tabla" style="overflow: scroll; height: 300px;">
                                <button id="btnExport" class="btn btn-success" onclick="exportReportToExcel(this)">EXPORTA EXCEL</button>
                                <br />

                                <table id="tblAsistenciasCredito" class="table table-striped table-bordered" style="width:100%">
                                    <thead class="table-dark">
                                        <tr>
                                            <td>Codigo</td>
                                            <td>Dpi</td>
                                            <td>COAS</td>
                                        </tr>
                                    </thead>
                                    <tfoot align="right" style="background: #eeeeee; ">
                                        <tr>
                                            <th></th>
                                            <th></th>
                                            <th></th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function exportReportToExcel() {
        let table = document.getElementsByTagName("table"); // you can use document.getElementById('tableId') as well by providing id to the table tag
        TableToExcel.convert(table[0], { // html code may contain multiple tables so here we are refering to 1st table tag
            name: `Archivo.xlsx`, // fileName you could use any name
            sheet: {
                name: 'Sheet 1' // sheetName
            }
        });
    }
    $(document).ready(function () {
        $("#btnExport").click(function () {
            let table = document.getElementsByTagName("tblAsistenciasCredito");
            TableToExcel.convert(table[0], { // html code may contain multiple tables so here we are refering to 1st table tag
                name: `Archivo.xlsx`, // fileName you could use any name
                sheet: {
                    name: 'Sheet 1' // sheetName
                }
            });
        });
    });
    $(document).ready(function () {
        var percent = 0;
        $('#progress-bar').css('width', percent + '%');
        $('#progress-bar').attr('aria-valuenow', percent);
        $('#progress-bar').text(percent + '%');




        $('#contenido-tabla').hide();

        $(document).on('click', '#consultar', function () {


            var table = $('#tblAsistenciasCredito').DataTable();
            //clear datatable
            table.clear().draw();
            //destroy datatable
            table.destroy();

            var fechaMinima = $('#FechaMinima').val();
            var fechaMaxima = $('#FechaMaxima').val();

            var busqueda = {
                "Fechaminima": fechaMinima,
                "FechaMaxima": fechaMaxima
            };

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetIndexAsistenciasCredito", "Cooasiste")',
                data: busqueda,
                beforeSend: function (response) {
                    var percent = 50;
                    $('#progress-bar').css('width', percent + '%');
                    $('#progress-bar').attr('aria-valuenow', percent);
                    $('#progress-bar').text(percent + '%');
                    var percent = 65;
                    $('#progress-bar').css('width', percent + '%');
                    $('#progress-bar').attr('aria-valuenow', percent);
                    $('#progress-bar').text(percent + '%');
                    $('#contenido-tabla').hide();
                },
                success: function (response) {
                    var percent = 70;
                    while (percent < 100) {
                        percent += 5;
                        $('#progress-bar').css('width', percent + '%');
                        $('#progress-bar').addClass("progress-bar progress-bar-striped bg-success");
                        $('#progress-bar').attr('aria-valuenow', percent);
                        $('#progress-bar').text(percent + '%');

                    }
                    if (response.data.Codigo == 1) {
                        $('#contenido-tabla').show();
                        jsonResult = response.data.AsistenciasCreditoListStr;

                        loadDataTable(jsonResult);
                        function loadDataTable(jsonResult) {
                            dataTable = $('#tblAsistenciasCredito').DataTable({
                                data: jsonResult,
                                    "columns": [
                                        { "data": "Codigo" },
                                        { "data": "Dpi" },
                                        { "data": "COAS" }
                                        ],
                                    "footerCallback": function (tfoot, data, start, end, display) {
                                        var api = this.api(), data;

                                        // Remove the formatting to get integer data for summation
                                        var intVal = function (i) {
                                            return typeof i === 'string' ?
                                                i.replace(/[\Q,]/g, '') * 1 :
                                                typeof i === 'number' ?
                                                    i : 0;
                                        };

                                        // computing column Total of the complete result
                                        var COAS = api
                                            .column(2)
                                            .data()
                                            .reduce(function (a, b) {
                                                return intVal(a) + intVal(b);
                                            }, 0);

                                        const formateador = new Intl.NumberFormat("en", { style: "currency", "currency": "GTQ" });

                                        $(api.column(0).footer()).html('Total');
                                        $(api.column(2).footer()).html(formateador.format(COAS));
                                },
                                destroy: true,
                                dom: 'Bfrtip',
                                columnDefs: [{
                                    visible: false
                                }],
                                buttons: [],
                                language: {
                                    "decimal": "",
                                    "emptyTable": "No hay información",
                                    "info": "Mostrando registros de _START_ al _END_ de un total de  _TOTAL_ registros",
                                    "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                                    "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                                    "infoPostFix": "",
                                    "thousands": ",",
                                    "lengthMenu": "Mostrar _MENU_ Entradas",
                                    "loadingRecords": "Cargando...",
                                    "processing": "Procesando...",
                                    "search": "Buscar:",
                                    "searchPlaceholder": "Buscar registros",
                                    "zeroRecords": "Sin resultados encontrados",
                                    "paginate": {
                                        "first": "Primero",
                                        "last": "Ultimo",
                                        "next": "Siguiente",
                                        "previous": "Anterior"
                                    }
                                },
                                responsive: true,
                                paging: false
                            });
                        }
                    }
                    else {
                        $('#contenido-tabla').hide();
                        Swal.fire({
                            icon: 'error',
                            text: response.data.Descripcion
                        })
                    }

                    /*$('#detalledestinos')*/
                    //$('#'+impresion+'').html(response);s

                },
            });
                return false;
        });
    });
</script>