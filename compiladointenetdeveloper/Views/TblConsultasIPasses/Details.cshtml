@model iveCincoFrame.Models.TblConsultasIPass

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layaut_Intranet.cshtml";
}



<div class="mx-1">
    <div class="row">
        @Html.Partial("_MensajeParcial")
        <div class="container">
            @using (Html.BeginForm("EditDataAsociado", "TblAsistenciasAsambaleas"))
            {
                @Html.HiddenFor(model => model.idTblConsultasIPass)
                <div class="row px-1 px-sm-1 px-md-3 px-lg-4">

                    <div class="col-12 col-sm-12  col-md-12 col-lg-12">
                        @Html.Label("Codigo de Asociado", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                               <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.codigoDeAsociado, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombre del Asociado", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="nombres" name="nombres" placeholder="Nombre del Asociado" readonly />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.codigoDeAsociado, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12 col-sm-12 col-md-4 col-lg-4">
                        @Html.Label("Tipo de documento", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-person-dots-from-line"></i>
                            </span>
                            @Html.EditorFor(model => model.tipoDocumento, new { htmlAttributes = new { @class = "form-control", @placeholder = "COI00000", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="numeroAsociado" name="numeroAsociado" placeholder="COI00000" readonly />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.tipoDocumento, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12 col-sm-12  col-md-4 col-lg-4">
                        @Html.Label("Numero de documento", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-address-card"></i>
                            </span>
                            @Html.EditorFor(model => model.numeroDoc, new { htmlAttributes = new { @class = "form-control", @placeholder = "0000000000000", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="numeroDpi" name="numeroDpi" placeholder="0000000000000" readonly />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.numeroDoc, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12 col-sm-12  col-md-4 col-lg-4">
                        @Html.Label("Primer Nombre", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3" id="input-tipo-asociado">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.primerNombre, new { htmlAttributes = new { @class = "form-control", @placeholder = "-----", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="tipoAsociado" name="tipoAsociado" placeholder="-----" readonly />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.primerNombre, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Segundo Nombre", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.segundoNombre, new { htmlAttributes = new { @class = "form-control", @placeholder = "-----", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="estadoTarjetaCredito" name="estadoTarjetaCredito" placeholder="-----" readonly />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.segundoNombre, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12 col-sm-12 col-md-3 col-lg-3">
                        @Html.Label("Tercer Nombre", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.tercerNombre, new { htmlAttributes = new { @class = "form-control", @placeholder = "-----", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="estadoCreditos" name="estadoCreditos" placeholder="-----" readonly />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.tercerNombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Primer Apellido", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.primerApellido, new { htmlAttributes = new { @class = "form-control", @placeholder = "00000000", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="telefono" name="telefono" placeholder="-----" readonly />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.primerApellido, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Segundo APellido", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.segundoApellido, new { htmlAttributes = new { @class = "form-control", @placeholder = "----------", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="genero" name="genero" placeholder="MASCULINO/FEMENINO" readonly value="TEST-GENERO" />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.segundoApellido, "", new { @class = "text-danger" })
                    </div>




                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Apellido de Casada", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.apellidoCasada, new { htmlAttributes = new { @class = "form-control", @placeholder = "----------", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="genero" name="genero" placeholder="MASCULINO/FEMENINO" readonly value="TEST-GENERO" />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.apellidoCasada, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Fecha de Nacimiento", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.fechaNacimiento, new { htmlAttributes = new { @class = "form-control", @placeholder = "----------", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="genero" name="genero" placeholder="MASCULINO/FEMENINO" readonly value="TEST-GENERO" />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Nacionalidad", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.nacionalidad, new { htmlAttributes = new { @class = "form-control", @placeholder = "----------", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="genero" name="genero" placeholder="MASCULINO/FEMENINO" readonly value="TEST-GENERO" />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.nacionalidad, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Genero", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.genero, new { htmlAttributes = new { @class = "form-control", @placeholder = "----------", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="genero" name="genero" placeholder="MASCULINO/FEMENINO" readonly value="TEST-GENERO" />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.genero, "", new { @class = "text-danger" })
                    </div>




                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Estado Civil", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.estadoCivil, new { htmlAttributes = new { @class = "form-control", @placeholder = "----------", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="genero" name="genero" placeholder="MASCULINO/FEMENINO" readonly value="TEST-GENERO" />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.estadoCivil, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Expiracion", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.expiracion, new { htmlAttributes = new { @class = "form-control", @placeholder = "----------", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="genero" name="genero" placeholder="MASCULINO/FEMENINO" readonly value="TEST-GENERO" />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.expiracion, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Pais Nacimiento", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.paisNacimiento, new { htmlAttributes = new { @class = "form-control", @placeholder = "----------", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="genero" name="genero" placeholder="MASCULINO/FEMENINO" readonly value="TEST-GENERO" />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.paisNacimiento, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12 col-sm-12  col-md-3 col-lg-3">
                        @Html.Label("Layer 3", new { @class = "form-label" })
                        <div class="input-group input-group-lg mb-3">
                            <span class="input-group-text">
                                <i class="fa-solid fa-table"></i>
                            </span>
                            @Html.EditorFor(model => model.layer3, new { htmlAttributes = new { @class = "form-control", @placeholder = "----------", @readOnly = "readonly" } })
                            @*<input type="text" class="form-control" id="genero" name="genero" placeholder="MASCULINO/FEMENINO" readonly value="TEST-GENERO" />*@
                        </div>
                        @Html.ValidationMessageFor(model => model.layer3, "", new { @class = "text-danger" })
                    </div>

                </div>

            }

        </div>
    </div>
</div>

<div class="mx-5">
    <h4>Resultados obtenidos de la consulta</h4>
    <hr />
    <dl class="dl-horizontal">


        <dt>
            @Html.DisplayNameFor(model => model.trNumDocumento)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.trNumDocumento)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.trc2)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.trc2)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.trc3)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.trc3)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.tr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.trClasificacion)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.trClasificacion)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.trEstatus)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.trEstatus)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.trSuccess)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.trSuccess)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.trMessage)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.trMessage)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.numDocumento)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.numDocumento)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.fechaNacimientoCA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.fechaNacimientoCA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.fechaNacimientoCB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.fechaNacimientoCB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.fechaNacimientoTr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.fechaNacimientoTr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.paisNacimientoCB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.paisNacimientoCB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.paisNacimientoCA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.paisNacimientoCA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.paisNacimientoTr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.paisNacimientoTr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.nacionalidadCB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.nacionalidadCB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.nacionalidadCA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.nacionalidadCA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.nacionalidadTr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.nacionalidadTr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.primerNombreCB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.primerNombreCB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.primerNombreCA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.primerNombreCA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.primerNombreTr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.primerNombreTr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.segundoNombreCB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.segundoNombreCB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.segundoNombreCA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.segundoNombreCA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.segundoNombreTr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.segundoNombreTr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.tercerNombreCB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tercerNombreCB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.tercerNombreCA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tercerNombreCA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.tercerNombreTr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tercerNombreTr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.primerApellidoCB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.primerApellidoCB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.primerApellidoCA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.primerApellidoCA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.primerApellidoTr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.primerApellidoTr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.segundoApellidoCB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.segundoApellidoCB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.segundoApellidoCA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.segundoApellidoCA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.segundoApellidoTr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.segundoApellidoTr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.estadoCivilCB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.estadoCivilCB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.estadoCivilCA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.estadoCivilCA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.estadoCivilTr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.estadoCivilTr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.apellidoCasadaCB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.apellidoCasadaCB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.apellidoCasadaCA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.apellidoCasadaCA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.apellidoCasadaTr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.apellidoCasadaTr)
        </dd>




        <dt>
            @Html.DisplayNameFor(model => model.fechaConsulta)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.fechaConsulta)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TblUsuarios.usuario)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TblUsuarios.usuario)
        </dd>

  

    </dl>
</div>
<p>
    @Html.ActionLink("Volver", "Index")
</p>
