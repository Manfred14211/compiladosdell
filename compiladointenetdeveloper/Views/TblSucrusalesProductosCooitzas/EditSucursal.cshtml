@model iveCincoFrame.Models.TblSucrusalesProductosCooitza





<div class="row mt-0">

    <div class="col-xl-12 card" style="box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);">
        <div class="">
            @*<h3>Detalles del Registro</h3>*@
            @*@using (Html.BeginForm())
                {*@
            @Html.Partial("_MensajeParcial")
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.idTblSucrusalesProductosCooitza)
            <div class="row px-1 px-sm-1 px-md-12 px-lg-12 text-center mt-2">
                <h4 class="text-primary">Configuracion de la sucursal <span><i class="fa-solid fa-store"></i></span></h4>
            </div>

            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                <div class="col-12 col-sm-12  col-md-12 col-lg-12">
                    @Html.Label("Sucursal", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="fa-solid fa-shop"></i>
                        </span>

                        @Html.DropDownList("idCatUbicaciones", null, htmlAttributes: new { @class = "form-control idSucursalAsingada", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.idCatUbicaciones, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">

                <div class="col-12 col-sm-12 col-md-4 col-lg-4">
                    @Html.Label("Anio", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="fa-solid fa-calendar"></i>
                        </span>
                        @Html.DropDownList("idCatAnios", null, htmlAttributes: new { @class = "form-select", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.idCatAnios, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-12 col-sm-12  col-md-4 col-lg-4">
                    @Html.Label("Mes", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="fa-solid fa-calendar-days"></i>
                        </span>

                        @Html.DropDownList("idCatMeses", null, htmlAttributes: new { @class = "form-select idCatMesesModal", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.idCatMeses, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-12 col-sm-12  col-md-4 col-lg-4">
                    @Html.Label("Clasificación", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="fa-solid fa-boxes-stacked"></i>
                        </span>

                        @Html.DropDownList("idCatTipificacionProductos", null, htmlAttributes: new { @class = "form-select", @disabled = "disabled" })
                    </div>
                </div>
            </div>
            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                <div class="col-12 col-sm-12  col-md-4 col-lg-4">
                    @Html.Label("Producto", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="fa-solid fa-box"></i>
                        </span>

                        @Html.DropDownList("idTblProductosCooitza", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.idTblProductosCooitza, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-12 col-sm-12  col-md-4 col-lg-4" id="container-mMensual">
                    @Html.Label("Monto Meta Mensual de la Sucursal", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="fa-solid fa-money-bill"></i>
                        </span>
                        <input type="text" class="form-control" id="monto" readonly />
                        @*@Html.EditorFor(model => model.metasMensual, new { htmlAttributes = new { @class = "form-control monto-sucursal-meta-mensual", @placeholder = "0.00", @readonly = "@readonly" } })
                            @Html.ValidationMessageFor(model => model.metasMensual, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="col-12 col-sm-12  col-md-4 col-lg-4" id="container-cMensual">
                    @Html.Label("Cantidad de Meta Mensual de la Sucursal", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="align-middle me-2 fas fa-fw fa-clipboard-check"></i>
                        </span>
                        <input type="text" class="form-control" id="cantidad" readonly />
                        @*@Html.EditorFor(model => model.cantidadMetaMensual, new { htmlAttributes = new { @class = "form-control cantidad-sucursal-meta-mensual", @placeholder = "0", @readonly = "@readonly" } })*@
                        @*@Html.ValidationMessageFor(model => model.cantidadMetaMensual, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            </div>

            <br />
            <div class="row px-1 px-sm-1 px-md-12 px-lg-12 text-center">
                <h4 class="text-primary">Configuracion de los colaboradores <span><i class="fa-solid fa-business-time"></i></span></h4>
            </div>

            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                <div class="col-12 col-sm-12  col-md-4 col-lg-4">
                    @Html.Label("Colaboradores de la sucursal", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="fa-solid fa-users"></i>
                        </span>
                        <select class="form-select idColaborador" aria-label="Default select example" id="codigoEmpleado" name="codigoEmpleado">
                        </select>
                    </div>
                </div>
                <div class="col-12 col-sm-12  col-md-4 col-lg-4" id="empleado-monto-mensual">
                    @Html.Label("Monto Meta Mensual", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="fa-solid fa-user-pen"></i>
                        </span>
                        <input type="text" name="mMColaborador" id="mMColaborador" class="form-control" />
                    </div>
                </div>
                <div class="col-12 col-sm-12  col-md-4 col-lg-4" id="empleado-cantidad-mensual">
                    @Html.Label("Cantidad de meta mensual para el colaborador", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="fa-solid fa-toolbox"></i>
                        </span>
                        <input type="number" name="cMColaborador" id="cMColaborador" class="form-control" placeholder="0" />
                    </div>
                </div>

            </div>
            <div class="row px-1 px-sm-1 px-md-3 px-lg-4 d-none">
                <div class="col-12 col-sm-12  col-md-12 col-lg-12" id="empleado-cantidad-mensual">
                    @Html.Label("Tipo de medicion Id", new { @class = "form-label" })
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="fa-solid fa-tag"></i>
                        </span>
                        <input type="number" class="form-control" name="idTiposMedicion" id="idTiposMedicion" />
                    </div>
                </div>
            </div>

            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                <div class="btn-group botoneraEmpleados" role="group" aria-label="Basic example" id="container-btn">
                    <button type="button" class="btn btn-success btn-lg" id="agregar-meta-empleado">Agregar Empleado <i class="fa-solid fa-check"></i></button>
                </div>
            </div>
            <br />
            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                
                    <table class="table" id="tblEmpleadosMetas">
                        <thead>
                            <tr class="small">
                                <th style="width:20%;">Sucursal</th>
                                <th style="width:30%;">Colaborador</th>
                                <th style="width:20%;">Monto Meta Mensual</th>
                                <th style="width:20%;">Cantidad Meta Mensual</th>
                                <th style="width:10%;">Año</th>
                                <th style="width:10%;">Mes</th>
                                <th style="width:20%;">Producto</th>
                                <th style="width:10%;">Acciones</th>
                            </tr>
                        </thead>
                        <tbody class="small" id="user-tbody">
                        </tbody>
                        <tfoot>
                            <tr class="align-right">
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
/* - - - - FUNCIONES - - - -*/
/*Funcion para obtener los productos a partir de un id de tipificacion*/
function getProductos(number) {
   $("#idTblProductosCooitza").empty();
   $.ajax({
      type: 'POST',
      url: '@Url.Action("ObtenerProductos", "TblSucrusalesProductosCooitzas")',
      dataType: 'json',
      data: {
         IdTipificacion: number
      },
      success: function (response) {
         $("#idTblProductosCooitza").append('<option  value="0" disabled selected>Selececcione</option>');
         $.each(response, function (i, coordinadores) {
            $("#idTblProductosCooitza").append('<option value="' +
               coordinadores.Value + '">' +
               coordinadores.Text + '</option>');
         });
      },
      error: function (ex) {
         alert('No se pueden cargar los productos' + ex)
      }
   });
   return false;
}
/*Funcion para obtener los colaboradores a partir de un id de sucursal*/
function getColaboradores(sid) {
   $("#codigoEmpleado").empty();
   $.ajax({
      type: 'POST',
      url: '@Url.Action("ObtenerColaboradorSucursal", "TblSucrusalesProductosCooitzas")',
      dataType: 'json',
      data: {
         idSucursal: sid
      },
      success: function (response) {
         $("#codigoEmpleado").append('<option  value="0" selected>SELECCIONAR TODOS</option>');
         $.each(response, function (i, empleados) {
            $("#codigoEmpleado").append('<option value="' +
               empleados.Value + '">' +
               empleados.Text + '</option>');
         });
      },
      error: function (ex) {
         alert('No se pueden cargar los empleados' + ex)
      }
   });
   return false;
}
/*Funcion para obtener los tipos de medicion a partir de un id de producto*/
function getTiposMedicionProductos(number) {
   $.ajax({
      type: 'POST',
      url: '@Url.Action("GetTiposMedicionProductos", "TblSucrusalesProductosCooitzas")',
      dataType: 'json',
      data: {
         idProducto: number
      },
      success: function (response) {
         $('#idTiposMedicion').val(response);
         if (response == 1) {
            $('#container-mMensual').hide();
            $('#container-cMensual').show();
            $('#empleado-monto-mensual').hide();
            $('#empleado-cantidad-mensual').show();
         } else {
            $('#container-mMensual').show();
            $('#container-cMensual').hide();
            $('#empleado-monto-mensual').show();
            $('#empleado-cantidad-mensual').hide();
         }
      },
      error: function (ex) {
         alert('No se pueden cargar los coordinadores' + ex)
      }
   });
   return false;
}
/*funcion para actualizar la meta que se muestra en el input meta total de la sucursal*/
function getSucursalMeta() {
   var idTblProductosCooitza = $('#idTblProductosCooitza').val();
   var idTblSucrusalesProductosCooitza = $('#idTblSucrusalesProductosCooitza').val();
   $.ajax({
      type: 'POST',
      url: '@Url.Action("GetMetaSucursal", "TblEmpleadosMetas")',
      data: {
         id: idTblProductosCooitza,
         idTblSucrusalesProductosCooitza: idTblSucrusalesProductosCooitza
      },
      beforeSend: function (response) {},
      success: function (response) {
         if (response.idCatTipoMedicion == 1) {
            $("#cantidad").html('');
            $("#cantidad").val(response.Cantidad);
         } else {
            $("#monto").html('');
            $("#monto").val(response.Monto);
         }
      }
   });
   return false;
}
/*Funcion para obtener metas de todos los colaborades de la sucursal*/
function getEmpleadosMetas(number) {
   Pace.track(function () {
      $.ajax({
         type: 'POST',
          url: '@Url.Action("GetMetasColaboradores", "TblEmpleadosMetas")',
         dataType: "json",
         data: {
            idTblSucProductos: number
         },
          beforeSend: function (response) {},
          success: function (result) {
            $("#user-tbody").html('');//limiar el tbody
            console.log(result);
            $.each(result, function (key, item) {
               var html = '';
               html += '<tr>';
               html += '<td>' + item.Sucursal + '</td>';
               html += `<td>
                            <div class="d-flex align-items-center">
                                <!-- Avatar -->
                                <div class="mx-1 mb-0 mt-0">
                                    <img class="avatar-img rounded-circle" src="https://app.cooitza.com.gt/Images/Seguridad/Usuarios/${item.Imagen}"
                                        height="35" width="35" alt="avatar">
                                </div>
                                <!-- Info -->
                                <div class="mb-0 mt-0">
                                    <h3 class="mb-0 fw-bold small">${item.NombreCompleto} </h3>
                                </div>
                            </div>
                        </td>`;
               html += '<td>' + item.MetaMensual + '</td>';
               html += '<td>' + item.CantidadMetaMensual + '</td>';
               html += '<td>' + item.Anio + '</td>';
               html += '<td>' + item.Mes + '</td>';
               html += '<td>' + item.Producto + '</td>';
               html += `<td class="table-action"><a href="#" id="editar-monto-cantidad" codigo="${item.idTblMetasEmpleados}"><i class="align-middle me-2 fas fa-fw fa-pencil-alt"></i></a><a href="#" id="eliminar-meta-empleado" codigo="${item.idTblMetasEmpleados}"><i class="align-middle fas fa-fw fa-trash"></i></a></td >`;
               html += '</tr>';
               $("#user-tbody").append(html);
            });
         }
      });
   });
}
/*Funcion para agregar meta a los colaboradores*/
$("#agregar-meta-empleado").on('click', function (e) {
   var SucursalCantidadMetaMensual = $(".cantidad-sucursal-meta-mensual").val();
   var SucursalMontoMetaMensual = $(".monto-sucursal-meta-mensual").val();
   var IdCatUbicaciones = $(".idSucursalAsingada").val();
   var IdTblSucrusalesProductosCooitza = $("#idTblSucrusalesProductosCooitza").val();
   var CantidadMetaMensual = $("#cMColaborador").val();
   var MontoMetaMensual = $("#mMColaborador").val();
   var codigoEmpleado = $("#codigoEmpleado").val();
   var IdCatTiposMedicion = $("#idTiposMedicion").val();
   var tblEmpleados = {
      IdTblSucrusalesProductosCooitza: IdTblSucrusalesProductosCooitza,
      CantidadMetaMensual: CantidadMetaMensual,
      MontoMetaMensual: MontoMetaMensual,
      IdCatUbicaciones: IdCatUbicaciones,
      codigoEmpleado: codigoEmpleado,
      IdCatTiposMedicion: IdCatTiposMedicion,

      SucursalCantidadMetaMensual: SucursalCantidadMetaMensual,
      SucursalMontoMetaMensual: SucursalMontoMetaMensual
   };
   /*se bloquea el boton para evitar envios mltiples al controller*/
   e.preventDefault();
   var btn = $(this);
   if (!btn.hasClass('disabled')) {
      Pace.track(function () {
         $.ajax({
            type: 'POST',
            url: '@Url.Action("CreateEmpleados", "TblEmpleadosMetas")',
            data: tblEmpleados,
            beforeSend: function (response) {
               btn.toggleClass('disabled');
               response.setRequestHeader("If-Modified-Since", "0");
               response.setRequestHeader("Cache-Control", "no-cache");
            },
            success: function (response) {
              console.log(response);
               if (response.Codigo == 1) {
                 /*se elimina la clase disabled al boton*/
                  btn.removeClass('disabled');
                  toastr.success(response.Descripcion);
                  getEmpleadosMetas(response.idTblSucrusalesProductosCooitza);//llamado al listado de metasEmpelados
               } else {
                  btn.toggleClass('disabled');
                  toastr.error(response.Descripcion);
               }
               $("#cMColaborador").val('');
               $("#mMColaborador").val('');
               $('#codigoEmpleado').val(0).trigger("change");
               /* llamado a la funcion que acutaliza la meta en el input de meta total de la sucrusal*/
               getSucursalMeta();
               /* - - - - - - - - - - - - - - - - - - - - - - - - - - - */
            },
         });
      });
   } else {
      return false;
   }
});
/*Funcion para eliminar la meta de un empleaedo*/
$(document).on('click', '#eliminar-meta-empleado', function () {
   var codigo = $(this).attr('codigo');
   Swal.fire({
      icon: 'warning',
      title: '¿Estás seguro/a de eliminar a este registro?',
      showConfirmButton: true,
      confirmButtonText: 'ELIMINAR',
      confirmButtonColor: '#3085d6',
      showCancelButton: true,
      cancelButtonText: 'CANCELAR',
      cancelButtonColor: '#d33',
      buttonsStyling: true,
   }).then((result) => {
      if (result.isConfirmed) {
         Pace.track(function () {
            $.ajax({
               type: 'POST',
               url: '@Url.Action("DeleteConfirmed", "TblEmpleadosMetas")',
               data: {
                  id: codigo
               },
               success: function (response) {
                  function toasterOptions() {
                     toastr.options = {
                        "closeButton": false,
                        "debug": false,
                        "newestOnTop": false,
                        "progressBar": true,
                        "positionClass": "toast-bottom-right",
                        "preventDuplicates": false,
                        "onclick": null,
                        "showDuration": "300",
                        "hideDuration": "1000",
                        "timeOut": "5000",
                        "extendedTimeOut": "1000",
                        "showEasing": "swing",
                        "hideEasing": "linear",
                        "showMethod": "fadeIn",
                        "hideMethod": "fadeOut"
                     };
                  };
                  toasterOptions();
                  if (response.Codigo == 1) {
                     toastr.success(response.Descripcion);
                     getEmpleadosMetas(response.IdTblSucursalesProductos);
                  /* llamado a la funcion que acutaliza la meta en el input de meta total de la sucrusal*/
                    getSucursalMeta();
                  /* - - - - - - - - - - - - - - - - - - - - - - - - - - - */
                  } else {
                     Swal.fire({
                        icon: 'error',
                        title: 'Ocurrio un error al eliminar el contacto',
                        text: response.Descripcion
                     })
                  }
               }
            });
         });
      }
   });
});
/*Funcion para cargar los montos de un ejecutivo a los input de entrada */
$(document).on('click', '#editar-monto-cantidad', function (e) {
   var id = $(this).attr('codigo');
    /*se bloquea el boton para evitar envios mltiples al controller*/
    e.preventDefault();
    var btn = $(this);
    if (!btn.hasClass('disabled')) {
           $.ajax({
                type: 'POST',
                url: '@Url.Action("EditarMontoCantidad", "TblEmpleadosMetas")',
                data: {id: id},
                beforeSend: function (response) {
                    btn.toggleClass('disabled');
                    response.setRequestHeader("If-Modified-Since", "0");
                    response.setRequestHeader("Cache-Control", "no-cache");
                },
                success: function (response) {
                 //console.log(response);
                 function toasterOptions() {
                    toastr.options = {
                       "closeButton": false,
                       "debug": false,
                       "newestOnTop": false,
                       "progressBar": true,
                       "positionClass": "toast-bottom-right",
                       "preventDuplicates": false,
                       "onclick": null,
                       "showDuration": "300",
                       "hideDuration": "1000",
                       "timeOut": "5000",
                       "extendedTimeOut": "1000",
                       "showEasing": "swing",
                       "hideEasing": "linear",
                       "showMethod": "fadeIn",
                       "hideMethod": "fadeOut"
                    };
                 };
                 toasterOptions();
                 if (response.Codigo == 1) {
                    $("#cMColaborador").val(response.Cantidad) //cantidad
                    $("#mMColaborador").val(response.Monto) //monto
                    $("#codigoEmpleado").val(response.IdTblEmpleado) //id del colaborador
                    $(".botoneraEmpleados").html(''); //monto
                    $(".botoneraEmpleados").html('<button type="button" class="btn btn-success btn-lg" id="gurdarCambiosMontoCantidad">Guardar Cambios</button><button type ="button" id="cancelar-modificacion" class="btn btn-dark btn-lg"> Cancelar</button>');
                     /* se elimina la clase disabled al boton */
                     btn.removeClass('disabled');
                     toastr.success(response.Descripcion);
                 }
                 else
                 {
                     /* se elimina la clase disabled al boton */
                     btn.removeClass('disabled');
                    toastr.error(response.Descripcion);
                 }
              }
            });
    } else {
      return false;
    }

});
/*Funcion para guardar el nuevo monto o cantidad para la meta del colaborador*/
$(document).on('click', '#gurdarCambiosMontoCantidad', function (e) {
//$("#gurdarCambiosMontoCantidad").on('click', function (e) {
   var IdTblSucrusalesProductosCooitza = $("#idTblSucrusalesProductosCooitza").val();
   var CantidadMetaMensual = $("#cMColaborador").val();
   var MontoMetaMensual = $("#mMColaborador").val();
   var codigoEmpleado = $("#codigoEmpleado").val();
   var tblEmpleados = {
      IdTblSucrusalesProductosCooitza: IdTblSucrusalesProductosCooitza,
      CantidadMetaMensual: CantidadMetaMensual,
      MontoMetaMensual: MontoMetaMensual,
      codigoEmpleado: codigoEmpleado,
   };
   //console.log(tblEmpleados);
        /*se bloquea el boton para evitar envios mltiples al controller*/
    e.preventDefault();
    var btn = $(this);
    if (!btn.hasClass('disabled')) {
        Pace.track(function () {
          $.ajax({
             type: 'POST',
             url: '@Url.Action("GurdarCambiosMontoCantidad", "TblEmpleadosMetas")',
             data: tblEmpleados,
             beforeSend: function (response) {
                btn.toggleClass('disabled');
                response.setRequestHeader("If-Modified-Since", "0");
                response.setRequestHeader("Cache-Control", "no-cache");
             },
             success: function (response) {
                console.log(response);

                function toasterOptions() {
                   toastr.options = {
                      "closeButton": false,
                      "debug": false,
                      "newestOnTop": false,
                      "progressBar": true,
                      "positionClass": "toast-bottom-right",
                      "preventDuplicates": false,
                      "onclick": null,
                      "showDuration": "300",
                      "hideDuration": "1000",
                      "timeOut": "5000",
                      "extendedTimeOut": "1000",
                      "showEasing": "swing",
                      "hideEasing": "linear",
                      "showMethod": "fadeIn",
                      "hideMethod": "fadeOut"
                   };
                };
                toasterOptions();
                if (response.Codigo == 1) {
                   $(".botoneraEmpleados").html(''); //limpia la botonera
                   $(".botoneraEmpleados").html('<button type="button" class="btn btn-success btn-lg" id="agregar-meta-empleado">Agregar Empleado <i class="fa-solid fa-check"></i></button>');
                   toastr.success(response.Descripcion);
                   /* se elimina la clase disabled al boton */
                   btn.removeClass('disabled');
                   getEmpleadosMetas(response.idTblSucrusalesProductosCooitza);

                } else {
                   /* se elimina la clase disabled al boton */
                   btn.removeClass('disabled');
                   toastr.error(response.Descripcion);
                }
                $("#cMColaborador").val('');
                $("#mMColaborador").val('');
                $('#codigoEmpleado').val(0).trigger("change");
                 /* llamado a la funcion que acutaliza la meta en el input de meta total de la sucrusal*/
                 getSucursalMeta();
                 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - */
             }
          });
        });
    }else{
      return false;
    }

});
/*funcion cancelar la edicion del monto o cantidad de meta del empleado*/
$(document).on('click', '#cancelar-modificacion', function () {
   $("#cMColaborador").val('');
   $("#mMColaborador").val('');
   $('#codigoEmpleado').val(0).trigger("change");
   $(".botoneraEmpleados").html('');
   $(".botoneraEmpleados").html('<button type="button" class="btn btn-success btn-lg" id="agregar-meta-empleado">Agregar Empleado <i class="fa-solid fa-check"></i></button>');
});
/* - - - - INCIALIZACION DE CONFI - - - -*/
$("#metasMensual").on({
   "focus": function (event) {
      $(event.target).select();
   },
   "keyup": function (event) {
      $(event.target).val(function (index, value) {
         return value.replace(/\D/g, "")
            .replace(/([0-9])([0-9]{2})$/, '$1.$2')
            .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
      });
   }
});
/*se aplica el hide para los input de metas*/
$('#container-cMensual').hide();
$('#container-mMensual').hide();
/*se aplica el hide para los input del empleado*/
$('#empleado-monto-mensual').hide();
$('#empleado-cantidad-mensual').show();
/*se aplica el select*/
$('#idCatUbicaciones').select2({
   theme: 'bootstrap-5'
});
$('#idCatTipificacionProductos').select2({
   theme: 'bootstrap-5'
});
$('#idTblProductosCooitza').select2({
   theme: 'bootstrap-5'
});
$('#idCatMeses').select2({
   theme: 'bootstrap-5'
});
$('#idCatAnios').select2({
   theme: 'bootstrap-5'
});
$("#mMColaborador").on({
   "focus": function (event) {
      $(event.target).select();
   },
   "keyup": function (event) {
      $(event.target).val(function (index, value) {
         return value.replace(/\D/g, "")
            .replace(/([0-9])([0-9]{2})$/, '$1.$2')
            .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
      });
   }
});
/*cargar dropdownlist con los prodictos */
$("#idCatTipificacionProductos").change(function () {

   var id = parseInt($("#idCatTipificacionProductos").val());
   getProductos(id);
})
$(".idSucursalAsingada").change(function () {

   var sid = parseInt($(".idSucursalAsingada").val());
   getColaboradores(sid);
})
$("#idTblProductosCooitza").change(function () {

   var siP = parseInt($("#idTblProductosCooitza").val());
   getTiposMedicionProductos(siP);
})
/* - - - - LLAMADO A LAS FUNCIONES - - - -*/
//llamado a la funcion para cargar colaboradores a aprtir de una sucursal
var sid = parseInt($(".idSucursalAsingada").val());
getColaboradores(sid);
//llamado a la funcion calcular meta
getSucursalMeta();
//llamado a la funcion para cargar los tipos de mediocion a paritr de un producto
var siP = parseInt($("#idTblProductosCooitza").val());
getTiposMedicionProductos(siP);


//llamado a la funcion pora cargar a los empleados
var id = @Model.idTblSucrusalesProductosCooitza;
getEmpleadosMetas(id);
});

</script>
