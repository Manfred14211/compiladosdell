@model iveCincoFrame.Models.TblSucrusalesProductosCooitza

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div>
            <div class="card">
                <div class="card-body">
                    <div class="my-3">
                        <div id="transac-directorios" class="col-12">
                            <div class="row">
                                <div class="mb-3"><button type="button" class="btn btn-primary btn-lg" onclick="location.href='@Url.Action("Index", "TblSucrusalesProductosCooitzas")'" style="box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);"><i class="align-middle me-2 fas fa-fw fa-arrow-alt-circle-left"></i></button></div>
                                <div class="card-actions bg-warning-dark text-white"><i class="align-middle me-2 fas fa-fw fa-plus-circle"></i> Editar Registro</div>

                                <div class="col-xl-12 card" style="box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);">
                                    <div class="card-body">
                                        @*<h3>Detalles del Registro</h3>*@
                                        @using (Html.BeginForm())
                                        {
                                            @Html.Partial("_MensajeParcial")
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                            @Html.HiddenFor(model => model.idTblSucrusalesProductosCooitza)
                                            <div class="row px-1 px-sm-1 px-md-12 px-lg-12 text-center">
                                                <h4 class="text-primary">Configuracion de la sucursal <span><i class="fa-solid fa-store"></i></span></h4>
                                            </div>

                                            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                                                <div class="col-12 col-sm-12  col-md-12 col-lg-12">
                                                    @Html.Label("Sucursal", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="fa-solid fa-shop"></i>
                                                        </span>

                                                        @Html.DropDownList("idCatUbicaciones", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.idCatUbicaciones, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">

                                                <div class="col-12 col-sm-12 col-md-4 col-lg-4">
                                                    @Html.Label("Anio", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="fa-solid fa-calendar"></i>
                                                        </span>
                                                        @Html.DropDownList("idCatAnios", null, htmlAttributes: new { @class = "form-select" })
                                                        @Html.ValidationMessageFor(model => model.idCatAnios, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-12 col-sm-12  col-md-4 col-lg-4">
                                                    @Html.Label("Mes", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="fa-solid fa-calendar-days"></i>
                                                        </span>

                                                        @Html.DropDownList("idCatMeses", null, htmlAttributes: new { @class = "form-select" })
                                                        @Html.ValidationMessageFor(model => model.idCatMeses, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-12 col-sm-12  col-md-4 col-lg-4">
                                                    @Html.Label("Clasificación", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="fa-solid fa-boxes-stacked"></i>
                                                        </span>

                                                        @Html.DropDownList("idCatTipificacionProductos", null, htmlAttributes: new { @class = "form-select" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                                                <div class="col-12 col-sm-12  col-md-4 col-lg-4">
                                                    @Html.Label("Producto", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="fa-solid fa-box"></i>
                                                        </span>

                                                        @Html.DropDownList("idTblProductosCooitza", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.idTblProductosCooitza, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-12 col-sm-12  col-md-4 col-lg-4" id="container-mMensual">
                                                    @Html.Label("Monto Meta Mensual", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="fa-solid fa-money-bill"></i>
                                                        </span>

                                                        @Html.EditorFor(model => model.metasMensual, new { htmlAttributes = new { @class = "form-control", @placeholder = "0.00" } })
                                                        @Html.ValidationMessageFor(model => model.metasMensual, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-12 col-sm-12  col-md-4 col-lg-4" id="container-cMensual">
                                                    @Html.Label("Cantidad de Meta Mensual", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="align-middle me-2 fas fa-fw fa-clipboard-check"></i>
                                                        </span>

                                                        @Html.EditorFor(model => model.cantidadMetaMensual, new { htmlAttributes = new { @class = "form-control", @placeholder = "0" } })
                                                        @Html.ValidationMessageFor(model => model.cantidadMetaMensual, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                            <br />
                                            <div class="row px-1 px-sm-1 px-md-12 px-lg-12 text-center">
                                                <h4 class="text-primary">Configuracion de los colaboradores <span><i class="fa-solid fa-business-time"></i></span></h4>
                                            </div>

                                            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                                                <div class="col-12 col-sm-12  col-md-4 col-lg-4">
                                                    @Html.Label("Colaboradores de la sucursal", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="fa-solid fa-users"></i>
                                                        </span>
                                                        <select class="form-select" aria-label="Default select example" id="codigoEmpleado" name="codigoEmpleado">
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-12 col-sm-12  col-md-4 col-lg-4" id="empleado-monto-mensual">
                                                    @Html.Label("Monto Meta Mensual", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="fa-solid fa-user-pen"></i>
                                                        </span>
                                                        <input type="text" name="mMColaborador" id="mMColaborador" class="form-control" />
                                                    </div>
                                                </div>
                                                <div class="col-12 col-sm-12  col-md-4 col-lg-4" id="empleado-cantidad-mensual">
                                                    @Html.Label("Cantidad Meta Mensual", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="fa-solid fa-toolbox"></i>
                                                        </span>
                                                        <input type="number" name="cMColaborador" id="cMColaborador" class="form-control" placeholder="0" />
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row px-1 px-sm-1 px-md-3 px-lg-4 d-none">
                                                <div class="col-12 col-sm-12  col-md-12 col-lg-12" id="empleado-cantidad-mensual">
                                                    @Html.Label("Tipo de medicion Id", new { @class = "form-label" })
                                                    <div class="input-group input-group-lg mb-3">
                                                        <span class="input-group-text">
                                                            <i class="fa-solid fa-tag"></i>
                                                        </span>
                                                        <input type="number" class="form-control" name="idTiposMedicion" id="idTiposMedicion" />
                                                    </div>
                                                </div>
                                            </div>

                                            @*<div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                                                <div class="container">
                                                    <button type="button" class="btn btn-primary btn-lg" id="agregar-empleado">Agregar <i class="fa-solid fa-check"></i></button>
                                                </div>
                                            </div>*@
                                            <br />
                                            <div class="row px-1 px-sm-1 px-md-3 px-lg-4">
                                                <div id="container-empleados">

                                                </div>
                                            </div>
                                            <br />
                                            <div class="row">
                                                <button type="submit" value="Create" class="btn btn-primary"><i class="align-middle me-2 fas fa-fw fa-check"></i> Guardar Registro</button>
                                            </div>

                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {

        $("#metasMensual").on({
            "focus": function (event) {
                $(event.target).select();
            },
            "keyup": function (event) {
                $(event.target).val(function (index, value) {
                    return value.replace(/\D/g, "")
                        .replace(/([0-9])([0-9]{2})$/, '$1.$2')
                        .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
                });
            }
        });
        /*se aplica el hide para los input de metas*/
        $('#container-cMensual').hide();
        $('#container-mMensual').hide();
        /*se aplica el hide para los input del empleado*/
        $('#empleado-monto-mensual').hide();
        $('#empleado-cantidad-mensual').show();

        /*se aplica el select*/
        $('#idCatUbicaciones').select2({
            theme: 'bootstrap-5'
        });

        $('#idCatTipificacionProductos').select2({
            theme: 'bootstrap-5'
        });

        $('#idTblProductosCooitza').select2({
            theme: 'bootstrap-5'
        });

        $('#idCatMeses').select2({
            theme: 'bootstrap-5'
        });

        $('#idCatAnios').select2({
            theme: 'bootstrap-5'
        });

        $('#codigoEmpleado').select2({
            theme: 'bootstrap-5'
        });
        //lamado de empleados
        var sid = parseInt($("#idCatUbicaciones").val());
        getColaboradores(sid);
        //llamado idTiposMedicionProductos
        var siP = parseInt($("#idTblProductosCooitza").val());
        getTiposMedicionProductos(siP);
        //llamado a las metasempelados

        var id = @Model.idTblSucrusalesProductosCooitza;
        console.log(id);
        getEmpleadosMetas(id);


        //$("#saldo").on({
        //    "focus": function (event) {
        //        $(event.target).select();
        //    },
        //    "keyup": function (event) {
        //        $(event.target).val(function (index, value) {
        //            return value.replace(/\D/g, "")
        //                .replace(/([0-9])([0-9]{2})$/, '$1.$2')
        //                .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
        //        });
        //    }
        //});
        //$("#metasAnual").on({
        //    "focus": function (event) {
        //        $(event.target).select();
        //    },
        //    "keyup": function (event) {
        //        $(event.target).val(function (index, value) {
        //            return value.replace(/\D/g, "")
        //                .replace(/([0-9])([0-9]{2})$/, '$1.$2')
        //                .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
        //        });
        //    }
        //});
        $("#mMColaborador").on({
            "focus": function (event) {
                $(event.target).select();
            },
            "keyup": function (event) {
                $(event.target).val(function (index, value) {
                    return value.replace(/\D/g, "")
                        .replace(/([0-9])([0-9]{2})$/, '$1.$2')
                        .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
                });
            }
        });
        $("#cantidadMetaMensual").on({
            "blur": function (event) {
                toastr.success('Se establecio la meta para la sucursal correctamente');
            }
        });
        //function formatear(cantidad) {
        //    var nuevo = cantidad.replace(/\D/g, "")
        //        .replace(/([0-9])([0-9]{2})$/, '$1.$2')
        //        .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
        //    return nuevo;
        //}
        //var saldo = $('#saldo').val();
        //var metasAnual = $('#metasAnual').val();
        //$('#saldo').val(formatear(saldo));
        //$('#metasAnual').val(formatear(metasAnual));


        /*cargar dropdownlist con los prodictos */
        $("#idCatTipificacionProductos").change(function () {

            var id = parseInt($("#idCatTipificacionProductos").val());
            getProductos(id);
        })

        function getProductos(number) {
            $("#idTblProductosCooitza").empty();
            $.ajax({
                   type: 'POST',
                   url: '@Url.Action("ObtenerProductos", "TblSucrusalesProductosCooitzas")',
                   dataType:'json',
                data: { IdTipificacion: number },
                success: function (response) {
                    //console.log(response);
                    ////debugger;
                    $("#idTblProductosCooitza").append('<option  value="0" disabled selected>Selececcione</option>');
                    $.each(response, function (i, coordinadores) {
                        $("#idTblProductosCooitza").append('<option value="'
                            + coordinadores.Value + '">'
                            + coordinadores.Text + '</option>');
                    });

                },
                error: function (ex) {
                       alert('No se pueden cargar los coordinadores' + ex)
                }
            });
            return false;

        }

        @*$("#idCatUbicaciones").change(function () {

            var sid = parseInt($("#idCatUbicaciones").val());
            getColaboradores(sid);
        })
        function getColaboradores(sid)
        {
             $("#codigoEmpleado").empty();
                $.ajax({
                       type: 'POST',
                       url: '@Url.Action("ObtenerColaboradorSucursal", "TblSucrusalesProductosCooitzas")',
                       dataType:'json',
                    data: { idSucursal: sid },
                    success: function (response) {

                        //debugger;
                        $("#codigoEmpleado").append('<option  value="0" selected>SELECCIONAR TODOS</option>');
                        $.each(response, function (i, empleados) {
                            $("#codigoEmpleado").append('<option value="'
                                + empleados.Value + '">'
                                + empleados.Text + '</option>');
                        });

                    },
                    error: function (ex) {
                           alert('No se pueden cargar los empleados' + ex)
                    }
                });
                return false;

        }*@
        $("#idTblProductosCooitza").change(function () {

            var siP = parseInt($("#idTblProductosCooitza").val());
            getTiposMedicionProductos(siP);
        })
        function getTiposMedicionProductos(number) {

            $.ajax({
                   type: 'POST',
                   url: '@Url.Action("GetTiposMedicionProductos", "TblSucrusalesProductosCooitzas")',
                   dataType:'json',
                data: { idProducto: number },
                success: function (response) {
                    $('#idTiposMedicion').val(response);
                    if (response == 1)
                    {
                        $('#container-mMensual').hide();
                        $('#container-cMensual').show();

                        $('#empleado-monto-mensual').hide();
                        $('#empleado-cantidad-mensual').show();
                    }
                    else
                    {
                        $('#container-mMensual').show();
                        $('#container-cMensual').hide();

                        $('#empleado-monto-mensual').show();
                        $('#empleado-cantidad-mensual').hide();
                    }
                },
                error: function (ex) {
                       alert('No se pueden cargar los coordinadores' + ex)
                }
            });
            return false;

        }
        @*$(document).on('click', '#agregar-empleado', function () {

            var SucursalCantidadMetaMensual = $("#cantidadMetaMensual").val();
            var SucursalMontoMetaMensual = $("#metasMensual").val();

            var IdTblSucrusalesProductosCooitza = $("#idTblSucrusalesProductosCooitza").val();
            var CantidadMetaMensual = $("#cMColaborador").val();
            var MontoMetaMensual = $("#mMColaborador").val();
            var IdCatUbicaciones = $("#idCatUbicaciones").val();
            var codigoEmpleado = $("#codigoEmpleado").val();
            var IdCatTiposMedicion = $("#idTiposMedicion").val();

            var tblEmpleados =
            {
                IdTblSucrusalesProductosCooitza: IdTblSucrusalesProductosCooitza,
                CantidadMetaMensual: CantidadMetaMensual,
                MontoMetaMensual: MontoMetaMensual,
                IdCatUbicaciones: IdCatUbicaciones,
                codigoEmpleado: codigoEmpleado,
                IdCatTiposMedicion: IdCatTiposMedicion,

                SucursalCantidadMetaMensual: SucursalCantidadMetaMensual,
                SucursalMontoMetaMensual: SucursalMontoMetaMensual
            };

            console.log(tblEmpleados);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateEmpleados", "TblEmpleadosMetas")',
                data: tblEmpleados,
                beforeSend: function (response) {
                },
                success: function (response) {
                    if (response.Codigo == 1) {
                        toastr.success('Meta asignada con exito!');
                        getEmpleadosMetas(@Model.idTblSucrusalesProductosCooitza);
                    }
                    else
                    {
                        toastr.error(response.Descripcion);
                    }
                    //console.log(response.Codigo);
                    //alert(response);
                },
            });
            return false;
        });*@

        function getEmpleadosMetas(number) {

            $.ajax({
                   type: 'POST',
                   url: '@Url.Action("GetMetasColaboradores", "TblEmpleadosMetas")',
                dataType:'html',
                data: { idTblSucProductos: number },
                beforeSend: function (response) {
                },
                success: function (response) {
                    console.log(response);

                    $('#container-empleados').html('');
                    $('#container-empleados').html(response);


                }
            });
            return false;

        }
        @*$(document).on('click', '#eliminar-meta-empleado', function () {
             var codigo = $(this).attr('codigo');
             //alert(codigo);
             Swal.fire({
                    icon: 'warning',
                    title: '¿Estás seguro/a de eliminar a este registro?',
                    showConfirmButton: true,
                    confirmButtonText: 'ELIMINAR',
                    confirmButtonColor: '#3085d6',
                    showCancelButton: true,
                    cancelButtonText: 'CANCELAR',
                    cancelButtonColor: '#d33',
                    buttonsStyling: true,

                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("DeleteConfirmed", "TblEmpleadosMetas")',
                            data: {
                                id: codigo
                            },
                            success: function (response) {

                                if (response.data == "ok") {
                                    toastr.success('Registro eliminado con exito!');


                                    getEmpleadosMetas(@Model.idTblSucrusalesProductosCooitza);
                                }
                                else
                                {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Ocurrio un error al eliminar el contacto',
                                        text: response.data

                                    })
                                }

                            }
                        });
                    }
             });
        });*@
    });

</script>